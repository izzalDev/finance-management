name: Release

on:
  workflow_run:
    workflows: ['Test']
    types: 
      - completed
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version-file: pubspec.yaml

    - name: Check Flutter version
      run: flutter --version

    - name: Get dependencies
      run: flutter pub get

    - name: Build apk
      run: flutter build apk

    - name: Get version from tag
      id: get_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION"

    - name: Get Release Note from Changelog
      run: |
        TAG_VERSION=${{ steps.get_version.outputs.VERSION }}
        awk -v tag="$TAG_VERSION" '/^## /{p=0} $0 ~ "^## " tag{p=1} p' CHANGELOG.md > release_note.txt
        cat release_note.txt

    - name: Create Release
      id: create_release
      uses: action/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.release }}
        body_path: release_note.txt

    - name: Upload Relese Asset
      uses: actions/upload-release-assets@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: finance_management_${{ github.ref }}.apk
        asset_content_type: application/zip

    - name: Clean up build files
      run: |
        rm -rf build
